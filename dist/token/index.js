"use strict";var _interopRequireDefault=require("@babel/runtime/helpers/interopRequireDefault");Object.defineProperty(exports,"__esModule",{value:true});exports.validateToken=void 0;var _regenerator=_interopRequireDefault(require("@babel/runtime/regenerator"));var _asyncToGenerator2=_interopRequireDefault(require("@babel/runtime/helpers/asyncToGenerator"));var _nodeJose=require("node-jose");var validateToken=/*#__PURE__*/function(){var _ref=(0,_asyncToGenerator2["default"])(/*#__PURE__*/_regenerator["default"].mark(function _callee(token){var status,error,key,decodedToken,data;return _regenerator["default"].wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.prev=0;_context.next=3;return _nodeJose.JWK.asKey(global.certificate,"pem");case 3:key=_context.sent;_context.next=6;return _nodeJose.JWS.createVerify(key).verify(token);case 6:decodedToken=_context.sent;data=JSON.parse(decodedToken.payload.toString("utf8"));if(!data.exp||data.exp<=Math.floor(Date.now()/1000)){status="EXPIRED";error="Token is expired";global.logger.info("The token provided is expired",{operationName:"tokenValidation"})}status!=="EXPIRED"?status="OK":"EXPIRED";return _context.abrupt("return",{status:status,error:error});case 13:_context.prev=13;_context.t0=_context["catch"](0);global.logger.info("Token validation threw errors",{operationName:"tokenValidation",stackTrace:_context.t0});status="ERROR";return _context.abrupt("return",{status:status,error:"Token is not valid"});case 18:case"end":return _context.stop();}}},_callee,null,[[0,13]])}));return function validateToken(_x){return _ref.apply(this,arguments)}}();exports.validateToken=validateToken;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy90b2tlbi9pbmRleC5qcyJdLCJuYW1lcyI6WyJ2YWxpZGF0ZVRva2VuIiwidG9rZW4iLCJKV0siLCJhc0tleSIsImdsb2JhbCIsImNlcnRpZmljYXRlIiwia2V5IiwiSldTIiwiY3JlYXRlVmVyaWZ5IiwidmVyaWZ5IiwiZGVjb2RlZFRva2VuIiwiZGF0YSIsIkpTT04iLCJwYXJzZSIsInBheWxvYWQiLCJ0b1N0cmluZyIsImV4cCIsIk1hdGgiLCJmbG9vciIsIkRhdGUiLCJub3ciLCJzdGF0dXMiLCJlcnJvciIsImxvZ2dlciIsImluZm8iLCJvcGVyYXRpb25OYW1lIiwic3RhY2tUcmFjZSJdLCJtYXBwaW5ncyI6IkFBQUEsYSwwVkFFQSxtQ0FHQSxHQUFNQSxDQUFBQSxhQUFhLDhHQUFHLGlCQUFPQyxLQUFQLG1NQUdKQyxlQUFJQyxLQUFKLENBQVVDLE1BQU0sQ0FBQ0MsV0FBakIsQ0FBOEIsS0FBOUIsQ0FISSxRQUdoQkMsR0FIZ0IscUNBS0tDLGVBQUlDLFlBQUosQ0FBaUJGLEdBQWpCLEVBQXNCRyxNQUF0QixDQUE2QlIsS0FBN0IsQ0FMTCxRQUtoQlMsWUFMZ0IsZUFPZEMsSUFQYyxDQU9QQyxJQUFJLENBQUNDLEtBQUwsQ0FBV0gsWUFBWSxDQUFDSSxPQUFiLENBQXFCQyxRQUFyQixDQUE4QixNQUE5QixDQUFYLENBUE8sQ0FRcEIsR0FBSSxDQUFDSixJQUFJLENBQUNLLEdBQU4sRUFBYUwsSUFBSSxDQUFDSyxHQUFMLEVBQWFDLElBQUksQ0FBQ0MsS0FBTCxDQUFXQyxJQUFJLENBQUNDLEdBQUwsR0FBYSxJQUF4QixDQUE5QixDQUE4RCxDQUM3REMsTUFBTSxDQUFHLFNBQVQsQ0FDQUMsS0FBSyxDQUFHLGtCQUFSLENBQ0FsQixNQUFNLENBQUNtQixNQUFQLENBQWNDLElBQWQsQ0FBbUIsK0JBQW5CLENBQW9ELENBQUNDLGFBQWEsQ0FBRSxpQkFBaEIsQ0FBcEQsQ0FDQSxDQUVBSixNQUFNLEdBQUssU0FBWixDQUF5QkEsTUFBTSxDQUFHLElBQWxDLENBQXlDLFNBQXpDLENBZG9CLGdDQWdCYixDQUNOQSxNQUFNLENBQU5BLE1BRE0sQ0FFTkMsS0FBSyxDQUFMQSxLQUZNLENBaEJhLDREQXNCcEJsQixNQUFNLENBQUNtQixNQUFQLENBQWNDLElBQWQsQ0FBbUIsK0JBQW5CLENBQW9ELENBQUNDLGFBQWEsQ0FBRSxpQkFBaEIsQ0FBbUNDLFVBQVUsWUFBN0MsQ0FBcEQsRUFDQUwsTUFBTSxDQUFHLE9BQVQsQ0F2Qm9CLGdDQXdCYixDQUFDQSxNQUFNLENBQU5BLE1BQUQsQ0FBU0MsS0FBSyxDQUFFLG9CQUFoQixDQXhCYSxzRUFBSCxrQkFBYnRCLENBQUFBLGFBQWEsMENBQW5CLEMiLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcclxuXHJcbmltcG9ydCB7SldLLCBKV1N9IGZyb20gXCJub2RlLWpvc2VcIjtcclxuXHJcblxyXG5jb25zdCB2YWxpZGF0ZVRva2VuID0gYXN5bmMgKHRva2VuKSA9PiB7XHJcblx0bGV0IHN0YXR1cywgZXJyb3I7XHJcblx0dHJ5IHtcclxuXHRcdGxldCBrZXkgPSBhd2FpdCBKV0suYXNLZXkoZ2xvYmFsLmNlcnRpZmljYXRlLCBcInBlbVwiKTtcclxuXHJcblx0XHRsZXQgZGVjb2RlZFRva2VuID0gYXdhaXQgSldTLmNyZWF0ZVZlcmlmeShrZXkpLnZlcmlmeSh0b2tlbik7XHJcblxyXG5cdFx0Y29uc3QgZGF0YSA9IEpTT04ucGFyc2UoZGVjb2RlZFRva2VuLnBheWxvYWQudG9TdHJpbmcoXCJ1dGY4XCIpKTtcclxuXHRcdGlmICghZGF0YS5leHAgfHwgZGF0YS5leHAgPD0gKE1hdGguZmxvb3IoRGF0ZS5ub3coKSAvIDEwMDApKSkge1xyXG5cdFx0XHRzdGF0dXMgPSBcIkVYUElSRURcIjtcclxuXHRcdFx0ZXJyb3IgPSBcIlRva2VuIGlzIGV4cGlyZWRcIjtcclxuXHRcdFx0Z2xvYmFsLmxvZ2dlci5pbmZvKFwiVGhlIHRva2VuIHByb3ZpZGVkIGlzIGV4cGlyZWRcIiwge29wZXJhdGlvbk5hbWU6IFwidG9rZW5WYWxpZGF0aW9uXCJ9KTtcclxuXHRcdH1cclxuXHJcblx0XHQoc3RhdHVzICE9PSBcIkVYUElSRURcIikgPyBzdGF0dXMgPSBcIk9LXCIgOiBcIkVYUElSRURcIjtcclxuXHJcblx0XHRyZXR1cm4ge1xyXG5cdFx0XHRzdGF0dXMsXHJcblx0XHRcdGVycm9yXHJcblx0XHR9O1xyXG5cclxuXHR9IGNhdGNoIChlcnIpIHtcclxuXHRcdGdsb2JhbC5sb2dnZXIuaW5mbyhcIlRva2VuIHZhbGlkYXRpb24gdGhyZXcgZXJyb3JzXCIsIHtvcGVyYXRpb25OYW1lOiBcInRva2VuVmFsaWRhdGlvblwiLCBzdGFja1RyYWNlOiBlcnJ9KTtcclxuXHRcdHN0YXR1cyA9IFwiRVJST1JcIjtcclxuXHRcdHJldHVybiB7c3RhdHVzLCBlcnJvcjogXCJUb2tlbiBpcyBub3QgdmFsaWRcIn07XHJcblx0fVxyXG5cclxufTtcclxuXHJcbmV4cG9ydCB7dmFsaWRhdGVUb2tlbn07Il19