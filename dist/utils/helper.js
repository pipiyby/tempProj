"use strict";var _interopRequireWildcard=require("@babel/runtime/helpers/interopRequireWildcard");Object.defineProperty(exports,"__esModule",{value:true});exports.isAccountNumber=exports.stringIsDate=exports.stringIsNumber=exports.base64Encoder=exports.base64Decoder=exports.empty=exports.getIpAddressAndPort=void 0;var os=_interopRequireWildcard(require("os"));/**
 * Function to check if a variable/array is empty
 * @param data Input Parameter
 * @returns {boolean} true/false
 */var empty=function empty(data){if(typeof data==="number"||typeof data==="boolean"){return false}if(typeof data==="undefined"||data===null){return true}if(typeof data.length!=="undefined"){return data.length===0}var count=0;for(var i in data){if(data.hasOwnProperty(i)){count++}}return count===0};/**
 * Check if variable string contains only numbers
 * @param value
 * @returns {boolean}
 */exports.empty=empty;var stringIsNumber=function stringIsNumber(value){var pattern=/^\d+$/;return pattern.test(value)};/**
 * Regex to check if the given variable is in YYYYMMDD format
 * It works for all leap years starting from 1582
 * @param value
 */exports.stringIsNumber=stringIsNumber;var stringIsDate=function stringIsDate(value){var pattern=new RegExp("^(?:(?:(?:(?:(?:[13579][26]|[2468][048])00)|(?:[0-9]{2}(?:(?:[13579][26])|(?:[2468][048]|0[48]))))(?:(?:(?:09|04|06|11)(?:0[1-9]|1[0-9]|2[0-9]|30))|(?:(?:01|03|05|07|08|10|12)(?:0[1-9]|1[0-9]|2[0-9]|3[01]))|(?:02(?:0[1-9]|1[0-9]|2[0-9]))))|(?:[0-9]{4}(?:(?:(?:09|04|06|11)(?:0[1-9]|1[0-9]|2[0-9]|30))|(?:(?:01|03|05|07|08|10|12)(?:0[1-9]|1[0-9]|2[0-9]|3[01]))|(?:02(?:[01][0-9]|2[0-8])))))$");return pattern.test(value)};/**
 * Function to get ipAddress and Port Number if available in the environment
 * @returns {{ipAddress: string, port: number}}
 */exports.stringIsDate=stringIsDate;var getIpAddressAndPort=function getIpAddressAndPort(){var nInterfaces=os.networkInterfaces();var ipAddress="localhost";Object.keys(nInterfaces).map(function(nInterface){nInterfaces[nInterface].filter(function(interfaceDetails){return interfaceDetails.family==="IPv4"&&interfaceDetails.internal===false?ipAddress=interfaceDetails.address:undefined})});return{ipAddress:ipAddress,port:process.env.PORT?process.env.PORT:3906}};/**
 * Function for decoding base64 value
 * @param value
 * @returns {*}
 */exports.getIpAddressAndPort=getIpAddressAndPort;var base64Decoder=function base64Decoder(value){if(empty(value)){return""}return Buffer.from(value,"base64").toString("ascii")};/**
 * Function for encoding a variable to base64
 * @param value
 * @returns {*}
 */exports.base64Decoder=base64Decoder;var base64Encoder=function base64Encoder(value){if(empty(value)){return""}return Buffer.from(value).toString("base64")};/**
 * Account Number validation
 *
 */exports.base64Encoder=base64Encoder;var isAccountNumber=function isAccountNumber(accountNumber){var pattern=new RegExp(/^[A-Za-z0-9]{1,35}$/);return pattern.test(accountNumber)};exports.isAccountNumber=isAccountNumber;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy91dGlscy9oZWxwZXIuanMiXSwibmFtZXMiOlsiZW1wdHkiLCJkYXRhIiwibGVuZ3RoIiwiY291bnQiLCJpIiwiaGFzT3duUHJvcGVydHkiLCJzdHJpbmdJc051bWJlciIsInZhbHVlIiwicGF0dGVybiIsInRlc3QiLCJzdHJpbmdJc0RhdGUiLCJSZWdFeHAiLCJnZXRJcEFkZHJlc3NBbmRQb3J0IiwibkludGVyZmFjZXMiLCJvcyIsIm5ldHdvcmtJbnRlcmZhY2VzIiwiaXBBZGRyZXNzIiwiT2JqZWN0Iiwia2V5cyIsIm1hcCIsIm5JbnRlcmZhY2UiLCJmaWx0ZXIiLCJpbnRlcmZhY2VEZXRhaWxzIiwiZmFtaWx5IiwiaW50ZXJuYWwiLCJhZGRyZXNzIiwidW5kZWZpbmVkIiwicG9ydCIsInByb2Nlc3MiLCJlbnYiLCJQT1JUIiwiYmFzZTY0RGVjb2RlciIsIkJ1ZmZlciIsImZyb20iLCJ0b1N0cmluZyIsImJhc2U2NEVuY29kZXIiLCJpc0FjY291bnROdW1iZXIiLCJhY2NvdW50TnVtYmVyIl0sIm1hcHBpbmdzIjoiQUFBQSxhLCtTQUVBLDhDQUVBOzs7O0dBS0EsR0FBTUEsQ0FBQUEsS0FBSyxDQUFHLFFBQVJBLENBQUFBLEtBQVEsQ0FBQ0MsSUFBRCxDQUFVLENBQ3ZCLEdBQUksTUFBT0EsQ0FBQUEsSUFBUCxHQUFpQixRQUFqQixFQUE2QixNQUFPQSxDQUFBQSxJQUFQLEdBQWlCLFNBQWxELENBQTZELENBQzVELE1BQU8sTUFDUCxDQUNELEdBQUksTUFBT0EsQ0FBQUEsSUFBUCxHQUFpQixXQUFqQixFQUFnQ0EsSUFBSSxHQUFLLElBQTdDLENBQW1ELENBQ2xELE1BQU8sS0FDUCxDQUNELEdBQUksTUFBT0EsQ0FBQUEsSUFBSSxDQUFDQyxNQUFaLEdBQXdCLFdBQTVCLENBQXlDLENBQ3hDLE1BQU9ELENBQUFBLElBQUksQ0FBQ0MsTUFBTCxHQUFnQixDQUN2QixDQUVELEdBQUlDLENBQUFBLEtBQUssQ0FBRyxDQUFaLENBQ0EsSUFBSyxHQUFJQyxDQUFBQSxDQUFULEdBQWNILENBQUFBLElBQWQsQ0FBb0IsQ0FDbkIsR0FBSUEsSUFBSSxDQUFDSSxjQUFMLENBQW9CRCxDQUFwQixDQUFKLENBQTRCLENBQzNCRCxLQUFLLEVBQ0wsQ0FDRCxDQUNELE1BQU9BLENBQUFBLEtBQUssR0FBSyxDQUNqQixDQWxCRCxDQW9CQTs7Ozt1QkFLQSxHQUFNRyxDQUFBQSxjQUFjLENBQUcsUUFBakJBLENBQUFBLGNBQWlCLENBQUNDLEtBQUQsQ0FBVyxDQUNqQyxHQUFJQyxDQUFBQSxPQUFPLENBQUcsT0FBZCxDQUNBLE1BQU9BLENBQUFBLE9BQU8sQ0FBQ0MsSUFBUixDQUFhRixLQUFiLENBQ1AsQ0FIRCxDQUtBOzs7O3lDQUtBLEdBQU1HLENBQUFBLFlBQVksQ0FBRyxRQUFmQSxDQUFBQSxZQUFlLENBQUNILEtBQUQsQ0FBVyxDQUMvQixHQUFJQyxDQUFBQSxPQUFPLENBQUcsR0FBSUcsQ0FBQUEsTUFBSixDQUFXLHdZQUFYLENBQWQsQ0FDQSxNQUFPSCxDQUFBQSxPQUFPLENBQUNDLElBQVIsQ0FBYUYsS0FBYixDQUNQLENBSEQsQ0FLQTs7O3FDQUlBLEdBQU1LLENBQUFBLG1CQUFtQixDQUFHLFFBQXRCQSxDQUFBQSxtQkFBc0IsRUFBTSxDQUVqQyxHQUFNQyxDQUFBQSxXQUFXLENBQUdDLEVBQUUsQ0FBQ0MsaUJBQUgsRUFBcEIsQ0FFQSxHQUFJQyxDQUFBQSxTQUFTLENBQUcsV0FBaEIsQ0FFQUMsTUFBTSxDQUFDQyxJQUFQLENBQVlMLFdBQVosRUFBeUJNLEdBQXpCLENBQTZCLFNBQUNDLFVBQUQsQ0FBZ0IsQ0FDNUNQLFdBQVcsQ0FBQ08sVUFBRCxDQUFYLENBQXdCQyxNQUF4QixDQUErQixTQUFDQyxnQkFBRCxRQUM5QkEsQ0FBQUEsZ0JBQWdCLENBQUNDLE1BQWpCLEdBQTRCLE1BQTVCLEVBQXNDRCxnQkFBZ0IsQ0FBQ0UsUUFBakIsR0FBOEIsS0FBcEUsQ0FBNEVSLFNBQVMsQ0FBR00sZ0JBQWdCLENBQUNHLE9BQXpHLENBQW1IQyxTQURyRixDQUEvQixDQUdBLENBSkQsRUFNQSxNQUFPLENBQ05WLFNBQVMsQ0FBVEEsU0FETSxDQUVOVyxJQUFJLENBQUVDLE9BQU8sQ0FBQ0MsR0FBUixDQUFZQyxJQUFaLENBQW1CRixPQUFPLENBQUNDLEdBQVIsQ0FBWUMsSUFBL0IsQ0FBc0MsSUFGdEMsQ0FJUCxDQWhCRCxDQWtCQTs7OzttREFLQSxHQUFNQyxDQUFBQSxhQUFhLENBQUcsUUFBaEJBLENBQUFBLGFBQWdCLENBQUN4QixLQUFELENBQVcsQ0FDaEMsR0FBSVAsS0FBSyxDQUFDTyxLQUFELENBQVQsQ0FBa0IsQ0FDakIsTUFBTyxFQUNQLENBQ0QsTUFBT3lCLENBQUFBLE1BQU0sQ0FBQ0MsSUFBUCxDQUFZMUIsS0FBWixDQUFtQixRQUFuQixFQUE2QjJCLFFBQTdCLENBQXNDLE9BQXRDLENBQ1AsQ0FMRCxDQU9BOzs7O3VDQUtBLEdBQU1DLENBQUFBLGFBQWEsQ0FBRyxRQUFoQkEsQ0FBQUEsYUFBZ0IsQ0FBQzVCLEtBQUQsQ0FBVyxDQUNoQyxHQUFJUCxLQUFLLENBQUNPLEtBQUQsQ0FBVCxDQUFrQixDQUNqQixNQUFPLEVBQ1AsQ0FDRCxNQUFPeUIsQ0FBQUEsTUFBTSxDQUFDQyxJQUFQLENBQVkxQixLQUFaLEVBQW1CMkIsUUFBbkIsQ0FBNEIsUUFBNUIsQ0FDUCxDQUxELENBT0E7Ozt1Q0FJQSxHQUFNRSxDQUFBQSxlQUFlLENBQUcsUUFBbEJBLENBQUFBLGVBQWtCLENBQUNDLGFBQUQsQ0FBbUIsQ0FDMUMsR0FBSTdCLENBQUFBLE9BQU8sQ0FBRyxHQUFJRyxDQUFBQSxNQUFKLENBQVcscUJBQVgsQ0FBZCxDQUNBLE1BQU9ILENBQUFBLE9BQU8sQ0FBQ0MsSUFBUixDQUFhNEIsYUFBYixDQUNQLENBSEQsQyIsInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xyXG5cclxuaW1wb3J0ICogYXMgb3MgZnJvbSBcIm9zXCI7XHJcblxyXG4vKipcclxuICogRnVuY3Rpb24gdG8gY2hlY2sgaWYgYSB2YXJpYWJsZS9hcnJheSBpcyBlbXB0eVxyXG4gKiBAcGFyYW0gZGF0YSBJbnB1dCBQYXJhbWV0ZXJcclxuICogQHJldHVybnMge2Jvb2xlYW59IHRydWUvZmFsc2VcclxuICovXHJcbmNvbnN0IGVtcHR5ID0gKGRhdGEpID0+IHtcclxuXHRpZiAodHlwZW9mKGRhdGEpID09PSBcIm51bWJlclwiIHx8IHR5cGVvZihkYXRhKSA9PT0gXCJib29sZWFuXCIpIHtcclxuXHRcdHJldHVybiBmYWxzZTtcclxuXHR9XHJcblx0aWYgKHR5cGVvZihkYXRhKSA9PT0gXCJ1bmRlZmluZWRcIiB8fCBkYXRhID09PSBudWxsKSB7XHJcblx0XHRyZXR1cm4gdHJ1ZTtcclxuXHR9XHJcblx0aWYgKHR5cGVvZihkYXRhLmxlbmd0aCkgIT09IFwidW5kZWZpbmVkXCIpIHtcclxuXHRcdHJldHVybiBkYXRhLmxlbmd0aCA9PT0gMDtcclxuXHR9XHJcblxyXG5cdGxldCBjb3VudCA9IDA7XHJcblx0Zm9yIChsZXQgaSBpbiBkYXRhKSB7XHJcblx0XHRpZiAoZGF0YS5oYXNPd25Qcm9wZXJ0eShpKSkge1xyXG5cdFx0XHRjb3VudCsrO1xyXG5cdFx0fVxyXG5cdH1cclxuXHRyZXR1cm4gY291bnQgPT09IDA7XHJcbn07XHJcblxyXG4vKipcclxuICogQ2hlY2sgaWYgdmFyaWFibGUgc3RyaW5nIGNvbnRhaW5zIG9ubHkgbnVtYmVyc1xyXG4gKiBAcGFyYW0gdmFsdWVcclxuICogQHJldHVybnMge2Jvb2xlYW59XHJcbiAqL1xyXG5jb25zdCBzdHJpbmdJc051bWJlciA9ICh2YWx1ZSkgPT4ge1xyXG5cdGxldCBwYXR0ZXJuID0gL15cXGQrJC87XHJcblx0cmV0dXJuIHBhdHRlcm4udGVzdCh2YWx1ZSk7XHJcbn07XHJcblxyXG4vKipcclxuICogUmVnZXggdG8gY2hlY2sgaWYgdGhlIGdpdmVuIHZhcmlhYmxlIGlzIGluIFlZWVlNTUREIGZvcm1hdFxyXG4gKiBJdCB3b3JrcyBmb3IgYWxsIGxlYXAgeWVhcnMgc3RhcnRpbmcgZnJvbSAxNTgyXHJcbiAqIEBwYXJhbSB2YWx1ZVxyXG4gKi9cclxuY29uc3Qgc3RyaW5nSXNEYXRlID0gKHZhbHVlKSA9PiB7XHJcblx0bGV0IHBhdHRlcm4gPSBuZXcgUmVnRXhwKFwiXig/Oig/Oig/Oig/Oig/OlsxMzU3OV1bMjZdfFsyNDY4XVswNDhdKTAwKXwoPzpbMC05XXsyfSg/Oig/OlsxMzU3OV1bMjZdKXwoPzpbMjQ2OF1bMDQ4XXwwWzQ4XSkpKSkoPzooPzooPzowOXwwNHwwNnwxMSkoPzowWzEtOV18MVswLTldfDJbMC05XXwzMCkpfCg/Oig/OjAxfDAzfDA1fDA3fDA4fDEwfDEyKSg/OjBbMS05XXwxWzAtOV18MlswLTldfDNbMDFdKSl8KD86MDIoPzowWzEtOV18MVswLTldfDJbMC05XSkpKSl8KD86WzAtOV17NH0oPzooPzooPzowOXwwNHwwNnwxMSkoPzowWzEtOV18MVswLTldfDJbMC05XXwzMCkpfCg/Oig/OjAxfDAzfDA1fDA3fDA4fDEwfDEyKSg/OjBbMS05XXwxWzAtOV18MlswLTldfDNbMDFdKSl8KD86MDIoPzpbMDFdWzAtOV18MlswLThdKSkpKSkkXCIpO1xyXG5cdHJldHVybiBwYXR0ZXJuLnRlc3QodmFsdWUpO1xyXG59O1xyXG5cclxuLyoqXHJcbiAqIEZ1bmN0aW9uIHRvIGdldCBpcEFkZHJlc3MgYW5kIFBvcnQgTnVtYmVyIGlmIGF2YWlsYWJsZSBpbiB0aGUgZW52aXJvbm1lbnRcclxuICogQHJldHVybnMge3tpcEFkZHJlc3M6IHN0cmluZywgcG9ydDogbnVtYmVyfX1cclxuICovXHJcbmNvbnN0IGdldElwQWRkcmVzc0FuZFBvcnQgPSAoKSA9PiB7XHJcblxyXG5cdGNvbnN0IG5JbnRlcmZhY2VzID0gb3MubmV0d29ya0ludGVyZmFjZXMoKTtcclxuXHJcblx0bGV0IGlwQWRkcmVzcyA9IFwibG9jYWxob3N0XCI7XHJcblxyXG5cdE9iamVjdC5rZXlzKG5JbnRlcmZhY2VzKS5tYXAoKG5JbnRlcmZhY2UpID0+IHtcclxuXHRcdG5JbnRlcmZhY2VzW25JbnRlcmZhY2VdLmZpbHRlcigoaW50ZXJmYWNlRGV0YWlscykgPT5cclxuXHRcdFx0aW50ZXJmYWNlRGV0YWlscy5mYW1pbHkgPT09IFwiSVB2NFwiICYmIGludGVyZmFjZURldGFpbHMuaW50ZXJuYWwgPT09IGZhbHNlID8gaXBBZGRyZXNzID0gaW50ZXJmYWNlRGV0YWlscy5hZGRyZXNzIDogdW5kZWZpbmVkXHJcblx0XHQpO1xyXG5cdH0pO1xyXG5cclxuXHRyZXR1cm4ge1xyXG5cdFx0aXBBZGRyZXNzLFxyXG5cdFx0cG9ydDogcHJvY2Vzcy5lbnYuUE9SVCA/IHByb2Nlc3MuZW52LlBPUlQgOiAzOTA2XHJcblx0fTtcclxufTtcclxuXHJcbi8qKlxyXG4gKiBGdW5jdGlvbiBmb3IgZGVjb2RpbmcgYmFzZTY0IHZhbHVlXHJcbiAqIEBwYXJhbSB2YWx1ZVxyXG4gKiBAcmV0dXJucyB7Kn1cclxuICovXHJcbmNvbnN0IGJhc2U2NERlY29kZXIgPSAodmFsdWUpID0+IHtcclxuXHRpZiAoZW1wdHkodmFsdWUpKSB7XHJcblx0XHRyZXR1cm4gXCJcIjtcclxuXHR9XHJcblx0cmV0dXJuIEJ1ZmZlci5mcm9tKHZhbHVlLCBcImJhc2U2NFwiKS50b1N0cmluZyhcImFzY2lpXCIpO1xyXG59O1xyXG5cclxuLyoqXHJcbiAqIEZ1bmN0aW9uIGZvciBlbmNvZGluZyBhIHZhcmlhYmxlIHRvIGJhc2U2NFxyXG4gKiBAcGFyYW0gdmFsdWVcclxuICogQHJldHVybnMgeyp9XHJcbiAqL1xyXG5jb25zdCBiYXNlNjRFbmNvZGVyID0gKHZhbHVlKSA9PiB7XHJcblx0aWYgKGVtcHR5KHZhbHVlKSkge1xyXG5cdFx0cmV0dXJuIFwiXCI7XHJcblx0fVxyXG5cdHJldHVybiBCdWZmZXIuZnJvbSh2YWx1ZSkudG9TdHJpbmcoXCJiYXNlNjRcIik7XHJcbn07XHJcblxyXG4vKipcclxuICogQWNjb3VudCBOdW1iZXIgdmFsaWRhdGlvblxyXG4gKlxyXG4gKi9cclxuY29uc3QgaXNBY2NvdW50TnVtYmVyID0gKGFjY291bnROdW1iZXIpID0+IHtcclxuXHRsZXQgcGF0dGVybiA9IG5ldyBSZWdFeHAoL15bQS1aYS16MC05XXsxLDM1fSQvKTtcclxuXHRyZXR1cm4gcGF0dGVybi50ZXN0KGFjY291bnROdW1iZXIpO1xyXG59O1xyXG5cclxuXHJcbmV4cG9ydCB7Z2V0SXBBZGRyZXNzQW5kUG9ydCwgZW1wdHksIGJhc2U2NERlY29kZXIsIGJhc2U2NEVuY29kZXIsIHN0cmluZ0lzTnVtYmVyLCBzdHJpbmdJc0RhdGUsIGlzQWNjb3VudE51bWJlcn07Il19