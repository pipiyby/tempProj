"use strict";var _interopRequireDefault=require("@babel/runtime/helpers/interopRequireDefault");Object.defineProperty(exports,"__esModule",{value:true});exports.getUserList=void 0;var _regenerator=_interopRequireDefault(require("@babel/runtime/regenerator"));var _asyncToGenerator2=_interopRequireDefault(require("@babel/runtime/helpers/asyncToGenerator"));var _writer=require("../utils/writer");var _StatusService=require("../service/StatusService");var _v=_interopRequireDefault(require("uuid/v4"));var getUserList=/*#__PURE__*/function(){var _ref=(0,_asyncToGenerator2["default"])(/*#__PURE__*/_regenerator["default"].mark(function _callee(req,res){var fnStartTime,correlationId,transactionId,responseObject,errorMsg,fnElapsedTime;return _regenerator["default"].wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:fnStartTime=Date.now();correlationId=req.swagger.params["correlationId"].value;transactionId=(0,_v["default"])();res.setHeader("transactionId",transactionId);res.setHeader("correlationId",correlationId?correlationId:"");_context.prev=5;_context.next=8;return(0,_StatusService.getLiveStatusService)();case 8:responseObject=_context.sent;(0,_writer.writeJson)(res,responseObject);_context.next=18;break;case 12:_context.prev=12;_context.t0=_context["catch"](5);errorMsg={code:50001,message:global.httpStatusCodes["500_MESSAGE"],fields:[]};(0,_writer.writeJson)(res,errorMsg);fnElapsedTime=Date.now()-fnStartTime+"ms";global.logger.error("Runtime Error.",{fnElapsedTime:fnElapsedTime,operationName:"getLiveStatusController",transactionId:transactionId,correlationId:correlationId,stackTrace:_context.t0});case 18:case"end":return _context.stop();}}},_callee,null,[[5,12]])}));return function getUserList(_x,_x2){return _ref.apply(this,arguments)}}();exports.getUserList=getUserList;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9jb250cm9sbGVycy9Vc2VyTGlzdC5qcyJdLCJuYW1lcyI6WyJnZXRVc2VyTGlzdCIsInJlcSIsInJlcyIsImZuU3RhcnRUaW1lIiwiRGF0ZSIsIm5vdyIsImNvcnJlbGF0aW9uSWQiLCJzd2FnZ2VyIiwicGFyYW1zIiwidmFsdWUiLCJ0cmFuc2FjdGlvbklkIiwic2V0SGVhZGVyIiwicmVzcG9uc2VPYmplY3QiLCJlcnJvck1zZyIsImNvZGUiLCJtZXNzYWdlIiwiZ2xvYmFsIiwiaHR0cFN0YXR1c0NvZGVzIiwiZmllbGRzIiwiZm5FbGFwc2VkVGltZSIsImxvZ2dlciIsImVycm9yIiwib3BlcmF0aW9uTmFtZSIsInN0YWNrVHJhY2UiXSwibWFwcGluZ3MiOiJBQUFBLGEsd1ZBRUEsdUNBQ0EsdURBQ0Esa0RBRUEsR0FBTUEsQ0FBQUEsV0FBVyw4R0FBRyxpQkFBT0MsR0FBUCxDQUFZQyxHQUFaLHdNQUNmQyxXQURlLENBQ0RDLElBQUksQ0FBQ0MsR0FBTCxFQURDLENBRWZDLGFBRmUsQ0FFQ0wsR0FBRyxDQUFDTSxPQUFKLENBQVlDLE1BQVosQ0FBbUIsZUFBbkIsRUFBb0NDLEtBRnJDLENBR2ZDLGFBSGUsQ0FHQyxtQkFIRCxDQUluQlIsR0FBRyxDQUFDUyxTQUFKLENBQWMsZUFBZCxDQUErQkQsYUFBL0IsRUFDQVIsR0FBRyxDQUFDUyxTQUFKLENBQWMsZUFBZCxDQUErQkwsYUFBYSxDQUFHQSxhQUFILENBQW1CLEVBQS9ELEVBTG1CLHNDQU9TLHlDQVBULFFBT2RNLGNBUGMsZUFRbEIsc0JBQVVWLEdBQVYsQ0FBZVUsY0FBZixFQVJrQixpRkFVZEMsUUFWYyxDQVVILENBQ2RDLElBQUksQ0FBRSxLQURRLENBRWRDLE9BQU8sQ0FBRUMsTUFBTSxDQUFDQyxlQUFQLENBQXVCLGFBQXZCLENBRkssQ0FHZEMsTUFBTSxDQUFFLEVBSE0sQ0FWRyxDQWVsQixzQkFBVWhCLEdBQVYsQ0FBZVcsUUFBZixFQUNJTSxhQWhCYyxDQWdCR2YsSUFBSSxDQUFDQyxHQUFMLEdBQWFGLFdBQWQsQ0FBNkIsSUFoQi9CLENBaUJsQmEsTUFBTSxDQUFDSSxNQUFQLENBQWNDLEtBQWQsQ0FBb0IsZ0JBQXBCLENBQXNDLENBQ3JDRixhQUFhLENBQWJBLGFBRHFDLENBRXJDRyxhQUFhLENBQUUseUJBRnNCLENBR3JDWixhQUFhLENBQWJBLGFBSHFDLENBSXJDSixhQUFhLENBQWJBLGFBSnFDLENBS3JDaUIsVUFBVSxZQUwyQixDQUF0QyxFQWpCa0Isb0VBQUgsa0JBQVh2QixDQUFBQSxXQUFXLDhDQUFqQixDIiwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XHJcblxyXG5pbXBvcnQge3dyaXRlSnNvbn0gZnJvbSBcIi4uL3V0aWxzL3dyaXRlclwiO1xyXG5pbXBvcnQge2dldExpdmVTdGF0dXNTZXJ2aWNlfSBmcm9tIFwiLi4vc2VydmljZS9TdGF0dXNTZXJ2aWNlXCI7XHJcbmltcG9ydCB1dWlkIGZyb20gXCJ1dWlkL3Y0XCI7XHJcblxyXG5jb25zdCBnZXRVc2VyTGlzdCA9IGFzeW5jIChyZXEsIHJlcykgPT4ge1xyXG5cdGxldCBmblN0YXJ0VGltZSA9IERhdGUubm93KCk7XHJcblx0bGV0IGNvcnJlbGF0aW9uSWQgPSByZXEuc3dhZ2dlci5wYXJhbXNbXCJjb3JyZWxhdGlvbklkXCJdLnZhbHVlO1xyXG5cdGxldCB0cmFuc2FjdGlvbklkID0gdXVpZCgpO1xyXG5cdHJlcy5zZXRIZWFkZXIoXCJ0cmFuc2FjdGlvbklkXCIsIHRyYW5zYWN0aW9uSWQpO1xyXG5cdHJlcy5zZXRIZWFkZXIoXCJjb3JyZWxhdGlvbklkXCIsIGNvcnJlbGF0aW9uSWQgPyBjb3JyZWxhdGlvbklkIDogXCJcIik7XHJcblx0dHJ5IHtcclxuXHRcdGxldCByZXNwb25zZU9iamVjdCA9IGF3YWl0IGdldExpdmVTdGF0dXNTZXJ2aWNlKCk7XHJcblx0XHR3cml0ZUpzb24ocmVzLCByZXNwb25zZU9iamVjdCk7XHJcblx0fSBjYXRjaCAoZSkge1xyXG5cdFx0bGV0IGVycm9yTXNnID0ge1xyXG5cdFx0XHRjb2RlOiA1MDAwMSxcclxuXHRcdFx0bWVzc2FnZTogZ2xvYmFsLmh0dHBTdGF0dXNDb2Rlc1tcIjUwMF9NRVNTQUdFXCJdLFxyXG5cdFx0XHRmaWVsZHM6IFtdXHJcblx0XHR9O1xyXG5cdFx0d3JpdGVKc29uKHJlcywgZXJyb3JNc2cpO1xyXG5cdFx0bGV0IGZuRWxhcHNlZFRpbWUgPSAoRGF0ZS5ub3coKSAtIGZuU3RhcnRUaW1lKSArIFwibXNcIjtcclxuXHRcdGdsb2JhbC5sb2dnZXIuZXJyb3IoXCJSdW50aW1lIEVycm9yLlwiLCB7XHJcblx0XHRcdGZuRWxhcHNlZFRpbWUsXHJcblx0XHRcdG9wZXJhdGlvbk5hbWU6IFwiZ2V0TGl2ZVN0YXR1c0NvbnRyb2xsZXJcIixcclxuXHRcdFx0dHJhbnNhY3Rpb25JZCxcclxuXHRcdFx0Y29ycmVsYXRpb25JZCxcclxuXHRcdFx0c3RhY2tUcmFjZTogZVxyXG5cdFx0fSk7XHJcblx0fVxyXG59O1xyXG5cclxuZXhwb3J0IHtnZXRVc2VyTGlzdH07Il19